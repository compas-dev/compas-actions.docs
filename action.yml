name: 'compas-actions.docs'
description: 'Build docs for COMPAS or its plugins'

inputs:
  doc_url:
    description: "custom url of the docs site, otherwise default gh-pages url of the repo"
    required: false
  github_token:
    description: 'the github token for publishing docs'
    required: true
  test_docs:
    description: 'whether to test docstrings in this action.'
    required: false
    default: 'true'
  python:
    description: "which python version to build docs with"
    required: false
    default: "3.10"
  use_conda:
    description: "whether to build docs with conda"
    required: false
    default: "false"
  use_virtual_display:
    description: "allow using virtual display on linux when matplotlab is imported"
    required: false
    default: "false"
  use_latex:
    description: "install dependencies for LaTex"
    required: false
    default: "false"  


outputs:
  commit_type:
    description: "The type of this commit: main, pull or tag"
    value: ${{ steps.docs.outputs.commit_type }}
  current_version:
    description: "The version number if the commit is tag"
    value: ${{ steps.docs.outputs.current_version }}
  subfolder:
    description: "The subfolder name where the docs are built to"
    value: ${{ steps.docs.outputs.subfolder }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    # Install graphvis
    - shell: bash -l {0}
      run: |
        if [[ ${{ runner.os }} == "Linux" ]]; then
          sudo apt-get install graphviz
        fi

    # Enable virtual display
    - shell: bash -l {0}
      run: |
        if [[ ${{ inputs.use_virtual_display }} == "true" ]]; then
          sudo apt-get install libqt5gui5 libqt5widgets5 qt5-default xvfb
          Xvfb :99 -screen 0 1024x768x24 &
          echo "DISPLAY=:99.0" >> $GITHUB_ENV
        fi

    # Install LaTex
    - shell: bash -l {0}
      run: |
        if [[ ${{ inputs.use_latex }} == "true" ]]; then
          sudo apt-get install texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra dvipng
        fi

    # Build package
    - uses: compas-dev/compas-actions.build@v4
      with:
        invoke_test: false
        use_conda: ${{ inputs.use_conda }}
        python: ${{ inputs.python }}

    # Test and generate docs
    - shell: bash -l {0}
      run: |
        if [[ ${{ inputs.test_docs }} == "true" ]]; then
          invoke testdocs
        fi

        invoke docs

    # Detect commit type and docs to corresponding folder
    - shell: bash -l {0}
      id: docs
      run: |
        # Get branch/tag/latest name from git
        GITHUB_REF_REGEX="tags/v[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}(-[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*)?(rc[0-9]{1,2})?|(pull/[0-9]+)|heads/main|heads/COMPAS-1\.x\.LTS"
        if [[ $GITHUB_REF =~ $GITHUB_REF_REGEX ]]; then
            if [[ $BASH_REMATCH = pull* ]]; then
                echo This is a pull request
                FOLDER_NAME=pull_${BASH_REMATCH##*/}
                echo "commit_type=pull" >> $GITHUB_OUTPUT
            elif [[ $BASH_REMATCH = tags/* ]]; then
                echo This is a version tag
                FOLDER_NAME=${BASH_REMATCH##*/v}
                echo "commit_type=tag" >> $GITHUB_OUTPUT
                echo "current_version=$FOLDER_NAME" >> $GITHUB_OUTPUT
            elif [[ $BASH_REMATCH = heads/COMPAS-1.x.LTS ]]; then
                echo This is a commit to the COMPAS-1.x.LTS branch
                FOLDER_NAME=1.x.LTS
                echo "commit_type=COMPAS-1.x.LTS" >> $GITHUB_OUTPUT
            else
                echo This is a commit to main branch
                FOLDER_NAME=latest
                echo "commit_type=main" >> $GITHUB_OUTPUT

            fi;
        fi;

        mkdir -p deploy/$FOLDER_NAME
        mv dist/docs/* deploy/$FOLDER_NAME/
        echo "subfolder=$FOLDER_NAME" >> $GITHUB_OUTPUT
        echo "Docs is built at deploy/$FOLDER_NAME/"


    # Deploy docs to ghpage
    - name: Deploy docs
      if: success() && steps.docs.outputs.commit_type != 'pull'
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: deploy
        keep_history: true
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
  
    # Remove old patches and update the versions.json file
    - uses: actions/checkout@v4
      if: success() && steps.docs.outputs.commit_type == 'tag'
      with:
        ref: gh-pages
    
    - uses: compas-dev/compas-actions.docversions@v3
      if: success() && steps.docs.outputs.commit_type == 'tag'
      with:
        doc_url: ${{ inputs.doc_url }}
        only_keep_latest_patch: true

    - name: Update docs site
      if: success() && steps.docs.outputs.commit_type == 'tag'
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: ./
        keep_history: false
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}